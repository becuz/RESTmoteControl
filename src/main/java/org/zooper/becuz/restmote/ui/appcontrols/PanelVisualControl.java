/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.zooper.becuz.restmote.ui.appcontrols;

import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

import org.zooper.becuz.restmote.model.VisualControl;
import org.zooper.becuz.restmote.ui.UIUtils;

/**
 *
 * @author bebo
 */
public class PanelVisualControl extends javax.swing.JPanel {

	private boolean modified;
	
	/**
	 * model VisualControl
	 */
	private VisualControl visualControl;
	
	/**
	 * 
	 */
	private JTable appVisualControlsTable;
	
	/**
	 * Listener for change selection and cell updates for appControlsTable
	 */
	public class ControlSelectionListener implements ListSelectionListener, TableModelListener {
	
		private int previousSelectedColumn = -1;
		private int previousSelectedRow = -1;

		//private boolean internalUpdate = false;
		
		public ControlSelectionListener() {
		}

		@Override
		public void valueChanged(ListSelectionEvent e) {
			if (e.getValueIsAdjusting()) {
				return;
			}
			int selectedColumn = appVisualControlsTable.getSelectedColumn();
			int selectedRow = appVisualControlsTable.getSelectedRow();
			
//			if (previousSelectedRow > -1 && previousSelectedColumn > -1 && (selectedRow != previousSelectedRow || selectedColumn != previousSelectedColumn)){
//				Control controlSelected = (Control) appControlsTable.getModel().getValueAt(previousSelectedRow, previousSelectedColumn);	
//				if (controlSelected != null){
//					boolean valid = true;
//					try {
//						controlSelected.validate();
//						valid = !controlSelected.isEmpty();
//					} catch (IllegalArgumentException ex){
//						valid = false;
//					}
//					if (!valid){
//						//internalUpdate = true;
//						appControlsTable.getModel().setValueAt(null, previousSelectedRow, previousSelectedColumn);
////					} else {
////						setControl(controlSelected);
//					}
//				}
//			}
//			VisualControl controlSelected = null;
//			if (selectedColumn > -1 && selectedRow > -1){
//				controlSelected = (VisualControl) appControlsTable.getModel().getValueAt(selectedRow, selectedColumn);	
//				if (
//						controlSelected == null 
//						//&& !internalUpdate 
//						&& (selectedColumn != previousSelectedColumn || selectedRow != previousSelectedRow)){
//					//internalUpdate = true;
//					controlSelected = ((AppVisualControlsTableModel)appControlsTable.getModel()).createDefaultControlAt("name", selectedRow, selectedColumn, false);
//					controlSelected.setHideImg(true);
//					appControlsTable.getModel().setValueAt(controlSelected, selectedRow, selectedColumn);
//				}
//			}
			
			VisualControl controlSelected = (VisualControl)appVisualControlsTable.getModel().getValueAt(selectedRow, selectedColumn);
			setVisualControl(controlSelected);
			previousSelectedRow = selectedRow;
			previousSelectedColumn = selectedColumn;
			//internalUpdate = false;
		}

		@Override
		public void tableChanged(TableModelEvent e) {
			VisualControl controlSelected = null;
			int selectedColumn = appVisualControlsTable.getSelectedColumn();
			int selectedRow = appVisualControlsTable.getSelectedRow();
			if (selectedColumn > -1 && selectedRow > -1){
				controlSelected = (VisualControl) appVisualControlsTable.getModel().getValueAt(selectedRow, selectedColumn);	
			}
			setVisualControl(controlSelected);
		}
		
		
	}
	
	/**
	 * Creates new form PanelVisualControl
	 */
	public PanelVisualControl() {
		initComponents();
	}
	
	public PanelVisualControl(JTable jt){
		this.appVisualControlsTable = jt;
		ControlSelectionListener controlSelectionListener = new ControlSelectionListener();
		appVisualControlsTable.getModel().addTableModelListener(controlSelectionListener);
		appVisualControlsTable.getSelectionModel().addListSelectionListener(controlSelectionListener);
		appVisualControlsTable.getColumnModel().getSelectionModel().addListSelectionListener(controlSelectionListener);
		initComponents();
	}

	public void setVisualControl(VisualControl control){
		this.visualControl = control;
		modified = false;
		setEnabled(control != null);
		UIUtils.setEnabledRecursive(this, control != null);
		copyToView();
	}
	
	private void copyToView(){
		textFieldSelectedControlName.setText(visualControl == null ? "" : visualControl.getName());
		textFieldSelectedControlName.setEnabled(visualControl != null);
		btnDeleteControl.setEnabled(visualControl != null);
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textFieldSelectedControlName = new javax.swing.JTextField();
        btnDeleteControl = new javax.swing.JButton();

        jLabel1.setText("Choose a name or drag an image over it");

        textFieldSelectedControlName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldSelectedControlNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldSelectedControlNameKeyTyped(evt);
            }
        });

        btnDeleteControl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/zooper/becuz/restmote/ui/images/16/delete.png"))); // NOI18N
        btnDeleteControl.setEnabled(false);
        btnDeleteControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteControlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldSelectedControlName, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(btnDeleteControl)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldSelectedControlName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(btnDeleteControl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldSelectedControlNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldSelectedControlNameKeyReleased
        System.out.println("TODO textFieldSelectedControlNameKeyReleased");
        modified = true;
        visualControl.setName(textFieldSelectedControlName.getText());
        fireUpdate();
    }//GEN-LAST:event_textFieldSelectedControlNameKeyReleased

	private void fireUpdate(){
		((AppVisualControlsTableModel)appVisualControlsTable.getModel())
				.fireTableCellUpdated(appVisualControlsTable.getSelectedRow(), appVisualControlsTable.getSelectedColumn());
	}
	
    private void textFieldSelectedControlNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldSelectedControlNameKeyTyped
        System.out.println("TODO textFieldSelectedControlNameKeyTyped");
        textFieldSelectedControlName.setText(visualControl == null ? "" : visualControl.getName());
    }//GEN-LAST:event_textFieldSelectedControlNameKeyTyped

    private void btnDeleteControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteControlActionPerformed
        int selectedRow = appVisualControlsTable.getSelectedRow();
        int selectedColumn = appVisualControlsTable.getSelectedColumn();
        appVisualControlsTable.clearSelection();
        appVisualControlsTable.getModel().setValueAt(null, selectedRow, selectedColumn);
    }//GEN-LAST:event_btnDeleteControlActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteControl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField textFieldSelectedControlName;
    // End of variables declaration//GEN-END:variables
}
